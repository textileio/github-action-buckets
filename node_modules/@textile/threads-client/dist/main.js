var threads=function(t){function e(e){for(var r,o,c=e[0],a=e[1],u=e[2],l=0,f=[];l<c.length;l++)o=c[l],Object.prototype.hasOwnProperty.call(s,o)&&s[o]&&f.push(s[o][0]),s[o]=0;for(r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r]);for(d&&d(e);f.length;)f.shift()();return i.push.apply(i,u||[]),n()}function n(){for(var t,e=0;e<i.length;e++){for(var n=i[e],r=!0,c=1;c<n.length;c++){var a=n[c];0!==s[a]&&(r=!1)}r&&(i.splice(e--,1),t=o(o.s=n[0]))}return t}var r={},s={0:0},i=[];function o(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=r,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)o.d(n,r,function(e){return t[e]}.bind(null,r));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="";var c=window.webpackJsonpthreads=window.webpackJsonpthreads||[],a=c.push.bind(c);c.push=e,c=c.slice();for(var u=0;u<c.length;u++)e(c[u]);var d=a;return i.push([96,1]),n()}({104:function(t,e,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n),Object.defineProperty(t,r,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),s=this&&this.__exportStar||function(t,e){for(var n in t)"default"===n||e.hasOwnProperty(n)||r(e,t,n)};Object.defineProperty(e,"__esModule",{value:!0}),e.marshalKey=void 0;const i=n(36);s(n(32),e),s(n(198),e),s(n(224),e),s(n(228),e),s(n(232),e);var o=n(233);Object.defineProperty(e,"Block",{enumerable:!0,get:function(){return o.Block}}),e.marshalKey=t=>t.public?i.keys.marshalPrivateKey(t):i.keys.marshalPublicKey(t)},157:function(t,e){},158:function(t,e){},189:function(t,e){},224:function(t,e,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n),Object.defineProperty(t,r,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),s=this&&this.__exportStar||function(t,e){for(var n in t)"default"===n||e.hasOwnProperty(n)||r(e,t,n)};Object.defineProperty(e,"__esModule",{value:!0}),s(n(225),e),s(n(226),e),s(n(227),e)},225:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0})},226:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ThreadProtocol=void 0;e.ThreadProtocol={name:"thread",code:406,version:"0.0.1",protocol:"/thread/0.0.1"}},227:function(t,e,n){"use strict";(function(t){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.ThreadKey=e.keyToString=e.keyFromString=e.invalidKeyError=void 0;const s=n(36),i=r(n(10));e.invalidKeyError=new Error("Invalid key");e.keyFromString=t=>i.default.decode(t),e.keyToString=t=>i.default.encode("base32",t).toString();class o{constructor(t,e){this.service=t,this.read=e}static fromRandom(t=!0){return new o(s.randomBytes(32),t?s.randomBytes(32):void 0)}static fromBytes(t){if(32!==t.byteLength&&64!==t.byteLength)throw e.invalidKeyError;const n=t.slice(0,32);let r;return 64===t.byteLength&&(r=t.slice(32)),new o(n,r)}static fromString(t){const e=i.default.decode(t);return this.fromBytes(e)}isDefined(){return void 0!==this.service}canRead(){return void 0!==this.read}toBytes(){return void 0!==this.read?t.concat([this.service,this.read]):this.service}toString(){return i.default.encode("base32",this.toBytes()).toString()}}e.ThreadKey=o}).call(this,n(0).Buffer)},228:function(t,e,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n),Object.defineProperty(t,r,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),s=this&&this.__exportStar||function(t,e){for(var n in t)"default"===n||e.hasOwnProperty(n)||r(e,t,n)};Object.defineProperty(e,"__esModule",{value:!0}),s(n(229),e),s(n(230),e),s(n(231),e)},229:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0})},230:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0})},231:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0})},232:function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{a(r.next(t))}catch(t){i(t)}}function c(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}a((r=r.apply(t,e||[])).next())}))},s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Libp2pCryptoIdentity=e.Libp2pCryptoPublicKey=e.privateKeyFromString=e.privateKeyToString=e.publicKeyToString=void 0;const i=n(36),o=s(n(10));function c(t){return o.default.encode("base32",i.keys.marshalPublicKey(t)).toString()}function a(t){return o.default.encode("base32",i.keys.marshalPrivateKey(t)).toString()}function u(t){return i.keys.unmarshalPrivateKey(o.default.decode(t))}e.publicKeyToString=c,e.privateKeyToString=a,e.privateKeyFromString=u;class d{constructor(t){this.key=t}verify(t,e){return this.key.verify(t,e)}toString(){return c(this.key)}get bytes(){return this.key.bytes}}e.Libp2pCryptoPublicKey=d;class l{constructor(t){this.key=t}sign(t){return this.key.sign(t)}get public(){return new d(this.key.public)}static fromRandom(){return r(this,void 0,void 0,(function*(){return new l(yield i.keys.supportedKeys.ed25519.generateKeyPair())}))}toString(){return a(this.key)}static fromString(t){return r(this,void 0,void 0,(function*(){return new l(yield u(t))}))}}e.Libp2pCryptoIdentity=l},233:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Block=void 0;const r=n(234);e.Block=r},32:function(t,e,n){"use strict";(function(t){var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.ThreadID=void 0;const s=n(181),i=r(n(185)),o=r(n(190));class c{constructor(t){this.buf=t}static fromRandom(e=c.Variant.Raw,n=32){const r=t.concat([t.from(s.encode(c.V1)),t.from(s.encode(e)),i.default(t.alloc(n))]);return new c(r)}static fromString(e){if(e.length<2)throw new Error("id too short");const n=t.from(o.default.decode(e));return c.fromBytes(n)}static fromBytes(e){let n=t.from(e);const r=s.decode(n);if(1!=r)throw new Error(`expected 1 as the id version number, got: ${r}.`);if(n=n.slice(s.decode.bytes,n.length),!(s.decode(n)in c.Variant))throw new Error("invalid variant.");if(n.slice(s.decode.bytes,n.length).length<16)throw new Error("random component too small.");return new c(t.from(e))}static getEncoding(t){if(t.length<2)throw new Error("Too Short");const e=o.default.isEncoded(t);if(!1===e)throw new Error("Invalid Encoding");return e}isDefined(){return this.buf.length>0}toBytes(){return t.from(this.buf)}equals(t){return this.buf.equals(t.buf)}version(){return s.decode(this.buf)}variant(){let e=t.from(this.buf);return s.decode(e),e=e.slice(s.decode.bytes),s.decode(e)}toString(t="base32"){switch(this.version()){case c.V1:return o.default.encode(t,this.buf).toString();default:throw new Error("unknown ID version.")}}}e.ThreadID=c,function(t){let e;t.V1=1,function(t){t[t.Raw=85]="Raw",t[t.AccessControlled=112]="AccessControlled"}(e=t.Variant||(t.Variant={}))}(c||(c={})),e.ThreadID=c}).call(this,n(0).Buffer)},326:function(t,e,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n),Object.defineProperty(t,r,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),s=this&&this.__exportStar||function(t,e){for(var n in t)"default"===n||e.hasOwnProperty(n)||r(e,t,n)};Object.defineProperty(e,"__esModule",{value:!0}),s(n(327),e),s(n(328),e),s(n(329),e)},327:function(t,e,n){"use strict";var r,s=this&&this.__rest||function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n};Object.defineProperty(e,"__esModule",{value:!0}),e.Query=e.Where=e.Criterion=e.ComparisonJSON=void 0,function(t){t[t.Eq=0]="Eq",t[t.Ne=1]="Ne",t[t.Gt=2]="Gt",t[t.Lt=3]="Lt",t[t.Ge=4]="Ge",t[t.Le=5]="Le"}(r=e.ComparisonJSON||(e.ComparisonJSON={}));class i{constructor(t,e,n,r){this.fieldPath=t,this.operation=e,this.value=n,this.query=r}eq(t){return this.create(r.Eq,t)}ne(t){return this.create(r.Ne,t)}gt(t){return this.create(r.Ne,t)}lt(t){return this.create(r.Lt,t)}ge(t){return this.create(r.Ge,t)}le(t){return this.create(r.Le,t)}create(t,e){return this.operation=t,this.value=(t=>{switch(typeof t){case"string":return{string:t};case"boolean":return{bool:t};case"number":return{float:t};default:throw new Error("unsupported JSON value type")}})(e),void 0===this.query&&(this.query=new c),this.query.ands.push(this),this.query}toJSON(){const{query:t}=this;return s(this,["query"])}}e.Criterion=i;const o=i;e.Where=o;class c{constructor(t=[],e=[],n){this.ands=t,this.ors=e,this.sort=n}static where(t){return new i(t)}and(t){return new i(t,void 0,void 0,this)}or(t){return this.ors.push(t),this}orderBy(t){return this.sort={fieldPath:t,desc:!1},this}orderByDesc(t){return this.sort={fieldPath:t,desc:!0},this}}e.Query=c},328:function(t,e,n){"use strict";(function(t){var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{a(r.next(t))}catch(t){i(t)}}function c(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}a((r=r.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.ReadTransaction=void 0;const s=n(28),i=n(95);class o extends i.Transaction{constructor(t,e,n,r){super(e,n,r),this.context=t,this.client=e,this.dbID=n,this.modelName=r}start(){return r(this,void 0,void 0,(function*(){const t=new s.StartTransactionRequest;t.setDbid(this.dbID.toBytes()),t.setCollectionname(this.modelName);const e=new s.ReadTransactionRequest;e.setStarttransactionrequest(t);const n=JSON.parse(JSON.stringify(this.context));this.client.start(n),this.client.send(e)}))}has(t){return r(this,void 0,void 0,(function*(){return new Promise((e,n)=>{const r=new s.HasRequest;r.setInstanceidsList(t);const i=new s.ReadTransactionRequest;i.setHasrequest(r),this.client.onMessage(t=>{const n=t.getHasreply();e(!!n&&n.toObject().exists)}),this.setReject(n),this.client.send(i)})}))}find(e){return r(this,void 0,void 0,(function*(){return new Promise((n,r)=>{const i=new s.FindRequest;i.setQueryjson(t.from(JSON.stringify(e)));const o=new s.ReadTransactionRequest;o.setFindrequest(i),this.client.onMessage(e=>{const r=e.getFindreply();if(void 0===r)n();else{const e={instancesList:r.toObject().instancesList.map(e=>JSON.parse(t.from(e,"base64").toString()))};n(e)}}),this.setReject(r),this.client.send(o)})}))}findByID(e){return r(this,void 0,void 0,(function*(){return new Promise((n,r)=>{const i=new s.FindByIDRequest;i.setInstanceid(e);const o=new s.ReadTransactionRequest;o.setFindbyidrequest(i),this.client.onMessage(e=>{const r=e.getFindbyidreply();if(void 0===r)n();else{const e={instance:JSON.parse(t.from(r.toObject().instance,"base64").toString())};n(e)}}),this.setReject(r),this.client.send(o)})}))}}e.ReadTransaction=o}).call(this,n(0).Buffer)},329:function(t,e,n){"use strict";(function(t){var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{a(r.next(t))}catch(t){i(t)}}function c(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}a((r=r.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.WriteTransaction=void 0;const s=n(28),i=n(95);class o extends i.Transaction{constructor(t,e,n,r){super(e,n,r),this.context=t,this.client=e,this.dbID=n,this.modelName=r}start(){return r(this,void 0,void 0,(function*(){const t=new s.StartTransactionRequest;t.setDbid(this.dbID.toBytes()),t.setCollectionname(this.modelName);const e=new s.WriteTransactionRequest;e.setStarttransactionrequest(t);const n=JSON.parse(JSON.stringify(this.context));this.client.start(n),this.client.send(e)}))}create(e){const n=Object.create(null,{setReject:{get:()=>super.setReject}});return r(this,void 0,void 0,(function*(){return new Promise((r,i)=>{const o=new s.CreateRequest,c=[];e.forEach(e=>{c.push(t.from(JSON.stringify(e)))}),o.setInstancesList(c);const a=new s.WriteTransactionRequest;a.setCreaterequest(o),this.client.onMessage(t=>{const e=t.getCreatereply();void 0===e?r():r(e.toObject().instanceidsList)}),n.setReject.call(this,i),this.client.send(a)})}))}save(e){const n=Object.create(null,{setReject:{get:()=>super.setReject}});return r(this,void 0,void 0,(function*(){return new Promise((r,i)=>{const o=new s.SaveRequest,c=[];e.forEach(e=>{e.hasOwnProperty("ID")||(e.ID=""),c.push(t.from(JSON.stringify(e)))}),o.setInstancesList(c);const a=new s.WriteTransactionRequest;a.setSaverequest(o),this.client.onMessage(t=>{r()}),n.setReject.call(this,i),this.client.send(a)})}))}delete(t){const e=Object.create(null,{setReject:{get:()=>super.setReject}});return r(this,void 0,void 0,(function*(){return new Promise((n,r)=>{const i=new s.DeleteRequest;i.setInstanceidsList(t);const o=new s.WriteTransactionRequest;o.setDeleterequest(i),this.client.onMessage(t=>{n()}),e.setReject.call(this,r),this.client.send(o)})}))}has(t){const e=Object.create(null,{setReject:{get:()=>super.setReject}});return r(this,void 0,void 0,(function*(){return new Promise((n,r)=>{const i=new s.HasRequest;i.setInstanceidsList(t);const o=new s.WriteTransactionRequest;o.setHasrequest(i),this.client.onMessage(t=>{const e=t.getHasreply();n(!!e&&1==e.toObject().exists)}),e.setReject.call(this,r),this.client.send(o)})}))}find(e){const n=Object.create(null,{setReject:{get:()=>super.setReject}});return r(this,void 0,void 0,(function*(){return new Promise((r,i)=>{const o=new s.FindRequest;o.setQueryjson(t.from(JSON.stringify(e)));const c=new s.WriteTransactionRequest;c.setFindrequest(o),this.client.onMessage(e=>{const n=e.getFindreply();if(void 0===n)r();else{const e={instancesList:n.toObject().instancesList.map(e=>JSON.parse(t.from(e,"base64").toString()))};r(e)}}),n.setReject.call(this,i),this.client.send(c)})}))}findByID(e){const n=Object.create(null,{setReject:{get:()=>super.setReject}});return r(this,void 0,void 0,(function*(){return new Promise((r,i)=>{const o=new s.FindByIDRequest;o.setInstanceid(e);const c=new s.WriteTransactionRequest;c.setFindbyidrequest(o),this.client.onMessage(e=>{const n=e.getFindbyidreply();if(void 0===n)r();else{const e={instance:JSON.parse(t.from(n.toObject().instance,"base64").toString())};r(e)}}),n.setReject.call(this,i),this.client.send(c)})}))}}e.WriteTransaction=o}).call(this,n(0).Buffer)},42:function(t,e){},95:function(t,e,n){"use strict";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{a(r.next(t))}catch(t){i(t)}}function c(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}a((r=r.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.Transaction=void 0;const s=n(35);e.Transaction=class{constructor(t,e,n){this.client=t,this.dbID=e,this.modelName=n}end(){return r(this,void 0,void 0,(function*(){this.client.close()}))}setReject(t){this.client.onEnd((e,n)=>{e!==s.grpc.Code.OK&&t(new Error(n))})}}},96:function(t,e,n){"use strict";(function(t){var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n),Object.defineProperty(t,r,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),s=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&r(e,t,n);return s(e,t),e},o=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{a(r.next(t))}catch(t){i(t)}}function c(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}a((r=r.apply(t,e||[])).next())}))},c=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Client=e.Where=e.Query=e.ThreadID=void 0;const a=n(35),u=n(100),d=i(n(28)),l=c(n(102)),f=n(104),h=n(286),y=n(32);Object.defineProperty(e,"ThreadID",{enumerable:!0,get:function(){return y.ThreadID}});const p=n(312),v=n(323),b=n(326);Object.defineProperty(e,"Query",{enumerable:!0,get:function(){return b.Query}}),Object.defineProperty(e,"Where",{enumerable:!0,get:function(){return b.Where}});class g{constructor(t=new p.Context("http://127.0.0.1:6007")){this.context=t,this.serviceHost=t.host,this.rpcOptions={transport:t.transport,debug:t.debug},this.rpcOptions.transport&&a.grpc.setDefaultTransport(this.rpcOptions.transport)}getToken(e,n){return o(this,void 0,void 0,(function*(){const r=a.grpc.client(u.API.GetToken,{host:this.serviceHost,transport:this.rpcOptions.transport,debug:this.rpcOptions.debug}),s=null!=e?e:yield f.Libp2pCryptoIdentity.fromRandom();return new Promise((e,i)=>{let c;r.onMessage(e=>o(this,void 0,void 0,(function*(){if(e.hasChallenge()){const n=e.getChallenge();let o=t.from("");try{o=yield s.sign(t.from(n))}catch(t){i(t)}const c=new d.GetTokenRequest;c.setSignature(o),r.send(c)}else e.hasToken()&&(c=e.getToken())}))),r.onEnd(t=>{r.close(),t===a.grpc.Code.OK?(this.context.withToken(c),e(c)):i(new Error(t.toString()))});const u=new d.GetTokenRequest;u.setKey(s.public.toString());const l=JSON.parse(JSON.stringify(this.context.withContext(n)));r.start(l),r.send(u)})}))}newDB(t,e){return o(this,void 0,void 0,(function*(){const e=null!=t?t:y.ThreadID.fromRandom(),n=new d.NewDBRequest;return n.setDbid(e.toBytes()),yield this.unary(u.API.NewDB,n),this.context.withThread&&this.context.withThread(e),e}))}newCollection(e,n,r){return o(this,void 0,void 0,(function*(){const s=new d.NewCollectionRequest,i=new d.CollectionConfig;i.setName(n),i.setSchema(t.from(JSON.stringify(r))),s.setDbid(e.toBytes()),s.setConfig(i),yield this.unary(u.API.NewCollection,s)}))}newDBFromAddr(t,e,n){return o(this,void 0,void 0,(function*(){const r=new d.NewDBFromAddrRequest,s=new h.Multiaddr(t).buffer;return r.setAddr(s),r.setKey("string"==typeof e?v.decode(e):e),r.setCollectionsList(n.map(t=>{const e=new d.CollectionConfig;return e.setName(t.name),e.setSchema(JSON.stringify(t.schema)),e})),yield this.unary(u.API.NewDBFromAddr,r)}))}getDBInfo(e){return o(this,void 0,void 0,(function*(){const n=new d.GetDBInfoRequest;n.setDbid(e.toBytes());const r=yield this.unary(u.API.GetDBInfo,n),s=[];for(const e of r.addrsList){const n=t.from(r.key,"base64"),i="string"==typeof e?t.from(e,"base64"):t.from(e),o=new h.Multiaddr(i).toString();s.push({address:o,key:v.encode(n)})}return s}))}create(e,n,r){return o(this,void 0,void 0,(function*(){const s=new d.CreateRequest;s.setDbid(e.toBytes()),s.setCollectionname(n);const i=[];return r.forEach(e=>{i.push(t.from(JSON.stringify(e)))}),s.setInstancesList(i),(yield this.unary(u.API.Create,s)).instanceidsList}))}save(e,n,r){return o(this,void 0,void 0,(function*(){const s=new d.SaveRequest;s.setDbid(e.toBytes()),s.setCollectionname(n);const i=[];r.forEach(e=>{e.hasOwnProperty("ID")||(e.ID=""),i.push(t.from(JSON.stringify(e)))}),s.setInstancesList(i),yield this.unary(u.API.Save,s)}))}delete(t,e,n){return o(this,void 0,void 0,(function*(){const r=new d.DeleteRequest;r.setDbid(t.toBytes()),r.setCollectionname(e),r.setInstanceidsList(n),yield this.unary(u.API.Delete,r)}))}has(t,e,n){return o(this,void 0,void 0,(function*(){const r=new d.HasRequest;return r.setDbid(t.toBytes()),r.setCollectionname(e),r.setInstanceidsList(n),(yield this.unary(u.API.Has,r)).exists}))}find(e,n,r){return o(this,void 0,void 0,(function*(){const s=new d.FindRequest;return s.setDbid(e.toBytes()),s.setCollectionname(n),s.setQueryjson(t.from(JSON.stringify(r)).toString("base64")),{instancesList:(yield this.unary(u.API.Find,s)).instancesList.map(e=>JSON.parse(t.from(e,"base64").toString()))}}))}findByID(e,n,r){return o(this,void 0,void 0,(function*(){const s=new d.FindByIDRequest;s.setDbid(e.toBytes()),s.setCollectionname(n),s.setInstanceid(r);const i=yield this.unary(u.API.FindByID,s);return{instance:JSON.parse(t.from(i.instance,"base64").toString())}}))}readTransaction(t,e){const n=a.grpc.client(u.API.ReadTransaction,{host:this.serviceHost,transport:this.rpcOptions.transport,debug:this.rpcOptions.debug});return new b.ReadTransaction(this.context,n,t,e)}writeTransaction(t,e){const n=a.grpc.client(u.API.WriteTransaction,{host:this.serviceHost,transport:this.rpcOptions.transport,debug:this.rpcOptions.debug});return new b.WriteTransaction(this.context,n,t,e)}listen(e,n,r){const s=new d.ListenRequest;s.setDbid(e.toBytes());for(const t of n){const e=new d.ListenRequest.Filter;if(t.instanceID?e.setInstanceid(t.instanceID):t.collectionName&&e.setCollectionname(t.collectionName),t.actionTypes)for(const n of t.actionTypes)switch(n){case"ALL":e.setAction(d.ListenRequest.Filter.Action.ALL);break;case"CREATE":e.setAction(d.ListenRequest.Filter.Action.CREATE);break;case"SAVE":e.setAction(d.ListenRequest.Filter.Action.SAVE);break;case"DELETE":e.setAction(d.ListenRequest.Filter.Action.DELETE)}else e.setAction(0);s.addFilters(e)}const i=JSON.parse(JSON.stringify(this.context)),o=a.grpc.invoke(u.API.Listen,{host:this.serviceHost,transport:this.rpcOptions.transport,debug:this.rpcOptions.debug,request:s,metadata:i,onMessage:e=>{const n={instance:JSON.parse(t.from(e.getInstance_asU8()).toString())};l.default(()=>r(n))},onEnd:(t,e,n)=>{t!==a.grpc.Code.OK&&l.default(()=>r(void 0,new Error(e))),l.default(r)}});return o.close.bind(o)}unary(t,e){return o(this,void 0,void 0,(function*(){const n=JSON.parse(JSON.stringify(this.context));return new Promise((r,s)=>{a.grpc.unary(t,{transport:this.rpcOptions.transport,debug:this.rpcOptions.debug,request:e,host:this.serviceHost,metadata:n,onEnd:t=>{const{status:e,statusMessage:n,message:i}=t;e===a.grpc.Code.OK?i?r(i.toObject()):r():s(new Error(n))}})})}))}}e.Client=g,e.default=g}).call(this,n(0).Buffer)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlYWRzL21haW4uanMiXSwibmFtZXMiOlsidGhyZWFkcyIsIm1vZHVsZXMiLCJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsImRhdGEiLCJtb2R1bGVJZCIsImNodW5rSWQiLCJjaHVua0lkcyIsIm1vcmVNb2R1bGVzIiwiZXhlY3V0ZU1vZHVsZXMiLCJpIiwicmVzb2x2ZXMiLCJsZW5ndGgiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbnN0YWxsZWRDaHVua3MiLCJwdXNoIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiZGVmZXJyZWRNb2R1bGVzIiwiYXBwbHkiLCJjaGVja0RlZmVycmVkTW9kdWxlcyIsInJlc3VsdCIsImRlZmVycmVkTW9kdWxlIiwiZnVsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMCIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInAiLCJqc29ucEFycmF5Iiwid2luZG93Iiwib2xkSnNvbnBGdW5jdGlvbiIsInNsaWNlIiwiMTA0IiwiX19jcmVhdGVCaW5kaW5nIiwidGhpcyIsImsiLCJrMiIsInVuZGVmaW5lZCIsIl9fZXhwb3J0U3RhciIsIm1hcnNoYWxLZXkiLCJsaWJwMnBfY3J5cHRvXzEiLCJpcGxkXzEiLCJCbG9jayIsInB1YmxpYyIsImtleXMiLCJtYXJzaGFsUHJpdmF0ZUtleSIsIm1hcnNoYWxQdWJsaWNLZXkiLCIxNTciLCIxNTgiLCIxODkiLCIyMjQiLCIyMjUiLCIyMjYiLCJUaHJlYWRQcm90b2NvbCIsImNvZGUiLCJ2ZXJzaW9uIiwicHJvdG9jb2wiLCIyMjciLCJCdWZmZXIiLCJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJkZWZhdWx0IiwiVGhyZWFkS2V5Iiwia2V5VG9TdHJpbmciLCJrZXlGcm9tU3RyaW5nIiwiaW52YWxpZEtleUVycm9yIiwibXVsdGliYXNlXzEiLCJFcnJvciIsImRlY29kZSIsImVuY29kZSIsInRvU3RyaW5nIiwiW29iamVjdCBPYmplY3RdIiwic2VydmljZSIsInJlYWQiLCJ3aXRoUmVhZCIsInJhbmRvbUJ5dGVzIiwiYnl0ZXMiLCJieXRlTGVuZ3RoIiwia2V5Qnl0ZXMiLCJzayIsInJrIiwiZnJvbUJ5dGVzIiwiY29uY2F0IiwidG9CeXRlcyIsIjIyOCIsIjIyOSIsIjIzMCIsIjIzMSIsIjIzMiIsIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJkb25lIiwidGhlbiIsIkxpYnAycENyeXB0b0lkZW50aXR5IiwiTGlicDJwQ3J5cHRvUHVibGljS2V5IiwicHJpdmF0ZUtleUZyb21TdHJpbmciLCJwcml2YXRlS2V5VG9TdHJpbmciLCJwdWJsaWNLZXlUb1N0cmluZyIsInN0ciIsInVubWFyc2hhbFByaXZhdGVLZXkiLCJzaWciLCJ2ZXJpZnkiLCJzaWduIiwic3VwcG9ydGVkS2V5cyIsImVkMjU1MTkiLCJnZW5lcmF0ZUtleVBhaXIiLCIyMzMiLCJfQmxvY2siLCIzMiIsIlRocmVhZElEIiwidmFyaW50XzEiLCJzeW5jX3JhbmRvbWJ5dGVzXzEiLCJidWYiLCJ2YXJpYW50IiwiVmFyaWFudCIsIlJhdyIsInNpemUiLCJmcm9tIiwiVjEiLCJhbGxvYyIsInYiLCJjb3B5IiwiZW5jb2RpbmciLCJpc0VuY29kZWQiLCJlcXVhbHMiLCJiYXNlIiwiMzI2IiwiMzI3IiwiQ29tcGFyaXNvbkpTT04iLCJfX3Jlc3QiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJRdWVyeSIsIldoZXJlIiwiQ3JpdGVyaW9uIiwiZmllbGRQYXRoIiwib3BlcmF0aW9uIiwicXVlcnkiLCJFcSIsIk5lIiwiTHQiLCJHZSIsIkxlIiwib3AiLCJzdHJpbmciLCJib29sIiwiZmxvYXQiLCJ2YWx1ZVRvSlNPTlZhbHVlIiwiYW5kcyIsIm9ycyIsInNvcnQiLCJkZXNjIiwiMzI4IiwiUmVhZFRyYW5zYWN0aW9uIiwiYXBpX3BiXzEiLCJUcmFuc2FjdGlvbl8xIiwiVHJhbnNhY3Rpb24iLCJjb250ZXh0IiwiY2xpZW50IiwiZGJJRCIsIm1vZGVsTmFtZSIsInN1cGVyIiwic3RhcnRSZXEiLCJTdGFydFRyYW5zYWN0aW9uUmVxdWVzdCIsInNldERiaWQiLCJzZXRDb2xsZWN0aW9ubmFtZSIsInJlcSIsIlJlYWRUcmFuc2FjdGlvblJlcXVlc3QiLCJzZXRTdGFydHRyYW5zYWN0aW9ucmVxdWVzdCIsIm1ldGFkYXRhIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5Iiwic3RhcnQiLCJzZW5kIiwiSURzIiwiaGFzUmVxIiwiSGFzUmVxdWVzdCIsInNldEluc3RhbmNlaWRzTGlzdCIsInNldEhhc3JlcXVlc3QiLCJvbk1lc3NhZ2UiLCJtZXNzYWdlIiwicmVwbHkiLCJnZXRIYXNyZXBseSIsInRvT2JqZWN0IiwiZXhpc3RzIiwic2V0UmVqZWN0IiwiZmluZFJlcSIsIkZpbmRSZXF1ZXN0Iiwic2V0UXVlcnlqc29uIiwic2V0RmluZHJlcXVlc3QiLCJnZXRGaW5kcmVwbHkiLCJyZXQiLCJpbnN0YW5jZXNMaXN0IiwibWFwIiwiaW5zdGFuY2UiLCJJRCIsIkZpbmRCeUlEUmVxdWVzdCIsInNldEluc3RhbmNlaWQiLCJzZXRGaW5kYnlpZHJlcXVlc3QiLCJnZXRGaW5kYnlpZHJlcGx5IiwiMzI5IiwiV3JpdGVUcmFuc2FjdGlvbiIsIldyaXRlVHJhbnNhY3Rpb25SZXF1ZXN0IiwidmFsdWVzIiwiX3N1cGVyIiwiY3JlYXRlUmVxIiwiQ3JlYXRlUmVxdWVzdCIsImxpc3QiLCJmb3JFYWNoIiwic2V0SW5zdGFuY2VzTGlzdCIsInNldENyZWF0ZXJlcXVlc3QiLCJnZXRDcmVhdGVyZXBseSIsImluc3RhbmNlaWRzTGlzdCIsInNhdmVSZXEiLCJTYXZlUmVxdWVzdCIsInNldFNhdmVyZXF1ZXN0IiwiX21lc3NhZ2UiLCJkZWxldGVSZXEiLCJEZWxldGVSZXF1ZXN0Iiwic2V0RGVsZXRlcmVxdWVzdCIsIjQyIiwiOTUiLCJncnBjX3dlYl8xIiwiY2xvc2UiLCJvbkVuZCIsInN0YXR1cyIsImdycGMiLCJDb2RlIiwiT0siLCI5NiIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsIl9faW1wb3J0U3RhciIsIkNsaWVudCIsImFwaV9wYl9zZXJ2aWNlXzEiLCJwYiIsIm5leHRfdGlja18xIiwidGhyZWFkc19jb3JlXzEiLCJtdWx0aWFkZHJfMSIsInRocmVhZHNfaWRfMSIsImNvbnRleHRfMSIsImJzNThfMSIsIm1vZGVsc18xIiwiQ29udGV4dCIsInNlcnZpY2VIb3N0IiwiaG9zdCIsInJwY09wdGlvbnMiLCJ0cmFuc3BvcnQiLCJkZWJ1ZyIsInNldERlZmF1bHRUcmFuc3BvcnQiLCJpZGVudGl0eSIsImN0eCIsIkFQSSIsIkdldFRva2VuIiwiaWRlbnQiLCJmcm9tUmFuZG9tIiwidG9rZW4iLCJoYXNDaGFsbGVuZ2UiLCJjaGFsbGVuZ2UiLCJnZXRDaGFsbGVuZ2UiLCJlcnIiLCJHZXRUb2tlblJlcXVlc3QiLCJzZXRTaWduYXR1cmUiLCJoYXNUb2tlbiIsImdldFRva2VuIiwid2l0aFRva2VuIiwic2V0S2V5Iiwid2l0aENvbnRleHQiLCJpZCIsIk5ld0RCUmVxdWVzdCIsInVuYXJ5IiwiTmV3REIiLCJ3aXRoVGhyZWFkIiwic2NoZW1hIiwiTmV3Q29sbGVjdGlvblJlcXVlc3QiLCJjb25maWciLCJDb2xsZWN0aW9uQ29uZmlnIiwic2V0TmFtZSIsInNldFNjaGVtYSIsInNldENvbmZpZyIsIk5ld0NvbGxlY3Rpb24iLCJhZGRyZXNzIiwiY29sbGVjdGlvbnMiLCJOZXdEQkZyb21BZGRyUmVxdWVzdCIsImFkZHIiLCJNdWx0aWFkZHIiLCJidWZmZXIiLCJzZXRBZGRyIiwic2V0Q29sbGVjdGlvbnNMaXN0IiwiTmV3REJGcm9tQWRkciIsIkdldERCSW5mb1JlcXVlc3QiLCJyZXMiLCJHZXREQkluZm8iLCJpbnZpdGVzIiwiYWRkcnNMaXN0IiwiZGsiLCJhIiwiY29sbGVjdGlvbk5hbWUiLCJDcmVhdGUiLCJTYXZlIiwiRGVsZXRlIiwiSGFzIiwiRmluZCIsIkZpbmRCeUlEIiwiZmlsdGVycyIsImNhbGxiYWNrIiwiTGlzdGVuUmVxdWVzdCIsImZpbHRlciIsInJlcXVlc3RGaWx0ZXIiLCJGaWx0ZXIiLCJpbnN0YW5jZUlEIiwiYWN0aW9uVHlwZXMiLCJhdCIsInNldEFjdGlvbiIsIkFjdGlvbiIsIkFMTCIsIkNSRUFURSIsIlNBVkUiLCJERUxFVEUiLCJhZGRGaWx0ZXJzIiwiaW52b2tlIiwiTGlzdGVuIiwicmVxdWVzdCIsInJlYyIsImdldEluc3RhbmNlX2FzVTgiLCJfdHJhaWxlcnMiLCJtZXRob2REZXNjcmlwdG9yIiwic3RhdHVzTWVzc2FnZSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFDSyxTQUFVQyxHQUVULFNBQVNDLEVBQXFCQyxHQVE3QixJQVBBLElBTUlDLEVBQVVDLEVBTlZDLEVBQVdILEVBQUssR0FDaEJJLEVBQWNKLEVBQUssR0FDbkJLLEVBQWlCTCxFQUFLLEdBSUhNLEVBQUksRUFBR0MsRUFBVyxHQUNwQ0QsRUFBSUgsRUFBU0ssT0FBUUYsSUFDekJKLEVBQVVDLEVBQVNHLEdBQ2hCRyxPQUFPQyxVQUFVQyxlQUFlQyxLQUFLQyxFQUFpQlgsSUFBWVcsRUFBZ0JYLElBQ3BGSyxFQUFTTyxLQUFLRCxFQUFnQlgsR0FBUyxJQUV4Q1csRUFBZ0JYLEdBQVcsRUFFNUIsSUFBSUQsS0FBWUcsRUFDWkssT0FBT0MsVUFBVUMsZUFBZUMsS0FBS1IsRUFBYUgs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Q3ZELE1BRUosSUFBSyxTQUNEUCxFQUFjSyxVQUFVOUUsRUFBR3VFLGNBQWNHLE9BQU9LLE9BQU9FLFFBQ3ZELE1BRUosSUFBSyxPQUNEUixFQUFjSyxVQUFVOUUsRUFBR3VFLGNBQWNHLE9BQU9LLE9BQU9HLE1BQ3ZELE1BRUosSUFBSyxTQUNEVCxFQUFjSyxVQUFVOUUsRUFBR3VFLGNBQWNHLE9BQU9LLE9BQU9JLGFBT25FVixFQUFjSyxVQUFVLEdBRTVCbkosRUFBSXlKLFdBQVdYLEdBRW5CLE1BQU0zSSxFQUFXQyxLQUFLQyxNQUFNRCxLQUFLRSxVQUFVckosS0FBS3NJLFVBQzFDc0ksRUFBTXBFLEVBQVdJLEtBQUs2RixPQUFPdEYsRUFBaUJrQixJQUFJcUUsT0FBUSxDQUM1RDVFLEtBQU05TixLQUFLNk4sWUFDWEcsVUFBV2hPLEtBQUsrTixXQUFXQyxVQUMzQkMsTUFBT2pPLEtBQUsrTixXQUFXRSxNQUN2QjBFLFFBQVM1SixFQUNURyxXQUNBVyxVQUFZK0ksSUFDUixNQUFNbkksRUFBTSxDQUNSRyxTQUFVekIsS0FBS0MsTUFBTTVILEVBQU9xRSxLQUFLK00sRUFBSUMsb0JBQW9CelEsYUFFN0RpTCxFQUFZMUwsUUFBUSxJQUFNK1AsRUFBU2pILEtBRXZDaUMsTUFBTyxDQUFDQyxFQUFRN0MsRUFBU2dKLEtBQ2pCbkcsSUFBV0gsRUFBV0ksS0FBS0MsS0FBS0MsSUFDaENPLEVBQVkxTCxRQUFRLElBQU0rUCxPQUFTdlIsRUFBVyxJQUFJOEIsTUFBTTZILEtBRTVEdUQsRUFBWTFMLFFBQVErUCxNQUc1QixPQUFPZCxFQUFJbkUsTUFBTXBOLEtBQUt1UixHQUUxQnZPLE1BQU0wUSxFQUFrQmhLLEdBQ3BCLE9BQU94RixFQUFVdkQsVUFBTSxPQUFRLEdBQVEsWUFDbkMsTUFBTWtKLEVBQVdDLEtBQUtDLE1BQU1ELEtBQUtFLFVBQVVySixLQUFLc0ksVUFDaEQsT0FBTyxJQUFJMUUsUUFBUSxDQUFDQyxFQUFTQyxLQUN6QjBJLEVBQVdJLEtBQUsyQyxNQUFNd0QsRUFBa0IsQ0FDcEMvRSxVQUFXaE8sS0FBSytOLFdBQVdDLFVBQzNCQyxNQUFPak8sS0FBSytOLFdBQVdFLE1BQ3ZCMEUsUUFBUzVKLEVBQ1QrRSxLQUFNOU4sS0FBSzZOLFlBQ1gzRSxXQUNBd0QsTUFBUWtFLElBQ0osTUFBTWpFLE9BQUVBLEVBQU1xRyxjQUFFQSxFQUFhbEosUUFBRUEsR0FBWThHLEVBQ3ZDakUsSUFBV0gsRUFBV0ksS0FBS0MsS0FBS0MsR0FDNUJoRCxFQUNBakcsRUFBUWlHLEVBQVFHLFlBR2hCcEcsSUFJSkMsRUFBTyxJQUFJN0IsTUFBTStRLGFBUTdDalYsRUFBUW1QLE9BQVNBLEVBRWpCblAsRUFBUTRELFFBQVV1TCxJQUVXclEsS0FBS21ELEtBQU1yQyxFQUFvQixHQUFHNkQiLCJmaWxlIjoiLi9tYWluLmpzIiwic291cmNlUm9vdCI6IiJ9