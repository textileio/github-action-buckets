var threads=function(e){function t(t){for(var n,u,c=t[0],s=t[1],a=t[2],f=0,l=[];f<c.length;f++)u=c[f],Object.prototype.hasOwnProperty.call(o,u)&&o[u]&&l.push(o[u][0]),o[u]=0;for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);for(d&&d(t);l.length;)l.shift()();return i.push.apply(i,a||[]),r()}function r(){for(var e,t=0;t<i.length;t++){for(var r=i[t],n=!0,c=1;c<r.length;c++){var s=r[c];0!==o[s]&&(n=!1)}n&&(i.splice(t--,1),e=u(u.s=r[0]))}return e}var n={},o={0:0},i=[];function u(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,u),r.l=!0,r.exports}u.m=e,u.c=n,u.d=function(e,t,r){u.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},u.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.t=function(e,t){if(1&t&&(e=u(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(u.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)u.d(r,n,function(t){return e[t]}.bind(null,n));return r},u.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return u.d(t,"a",t),t},u.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},u.p="";var c=window.webpackJsonpthreads=window.webpackJsonpthreads||[],s=c.push.bind(c);c.push=t,c=c.slice();for(var a=0;a<c.length;a++)t(c[a]);var d=s;return i.push([84,1]),r()}({142:function(e,t){},143:function(e,t){},174:function(e,t){},209:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),o(r(210),t),o(r(211),t),o(r(212),t)},210:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},211:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ThreadProtocol=void 0;t.ThreadProtocol={name:"thread",code:406,version:"0.0.1",protocol:"/thread/0.0.1"}},212:function(e,t,r){"use strict";(function(e){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ThreadKey=t.keyToString=t.keyFromString=t.invalidKeyError=void 0;const o=r(31),i=n(r(10));t.invalidKeyError=new Error("Invalid key");t.keyFromString=e=>i.default.decode(e),t.keyToString=e=>i.default.encode("base32",e).toString();class u{constructor(e,t){this.service=e,this.read=t}static fromRandom(e=!0){return new u(o.randomBytes(32),e?o.randomBytes(32):void 0)}static fromBytes(e){if(32!==e.byteLength&&64!==e.byteLength)throw t.invalidKeyError;const r=e.slice(0,32);let n;return 64===e.byteLength&&(n=e.slice(32)),new u(r,n)}static fromString(e){const t=i.default.decode(e);return this.fromBytes(t)}isDefined(){return void 0!==this.service}canRead(){return void 0!==this.read}toBytes(){return void 0!==this.read?e.concat([this.service,this.read]):this.service}toString(){return i.default.encode("base32",this.toBytes()).toString()}}t.ThreadKey=u}).call(this,r(0).Buffer)},213:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),o(r(214),t),o(r(215),t),o(r(216),t)},214:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},215:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},216:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},217:function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function u(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(u,c)}s((n=n.apply(e,t||[])).next())}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Libp2pCryptoIdentity=t.Libp2pCryptoPublicKey=t.privateKeyFromString=t.privateKeyToString=t.publicKeyToString=void 0;const i=r(31),u=o(r(10));function c(e){return u.default.encode("base32",i.keys.marshalPublicKey(e)).toString()}function s(e){return u.default.encode("base32",i.keys.marshalPrivateKey(e)).toString()}function a(e){return i.keys.unmarshalPrivateKey(u.default.decode(e))}t.publicKeyToString=c,t.privateKeyToString=s,t.privateKeyFromString=a;class d{constructor(e){this.key=e}verify(e,t){return this.key.verify(e,t)}toString(){return c(this.key)}get bytes(){return this.key.bytes}}t.Libp2pCryptoPublicKey=d;class f{constructor(e){this.key=e}sign(e){return this.key.sign(e)}get public(){return new d(this.key.public)}static fromRandom(){return n(this,void 0,void 0,(function*(){return new f(yield i.keys.supportedKeys.ed25519.generateKeyPair())}))}toString(){return s(this.key)}static fromString(e){return n(this,void 0,void 0,(function*(){return new f(yield a(e))}))}}t.Libp2pCryptoIdentity=f},218:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Block=void 0;const n=r(219);t.Block=n},37:function(e,t){},61:function(e,t,r){"use strict";(function(e){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ThreadID=void 0;const o=r(166),i=n(r(170)),u=n(r(175));class c{constructor(e){this.buf=e}static fromRandom(t=c.Variant.Raw,r=32){const n=e.concat([e.from(o.encode(c.V1)),e.from(o.encode(t)),i.default(e.alloc(r))]);return new c(n)}static fromString(t){if(t.length<2)throw new Error("id too short");const r=e.from(u.default.decode(t));return c.fromBytes(r)}static fromBytes(t){let r=e.from(t);const n=o.decode(r);if(1!=n)throw new Error(`expected 1 as the id version number, got: ${n}.`);if(r=r.slice(o.decode.bytes,r.length),!(o.decode(r)in c.Variant))throw new Error("invalid variant.");if(r.slice(o.decode.bytes,r.length).length<16)throw new Error("random component too small.");return new c(e.from(t))}static getEncoding(e){if(e.length<2)throw new Error("Too Short");const t=u.default.isEncoded(e);if(!1===t)throw new Error("Invalid Encoding");return t}isDefined(){return this.buf.length>0}toBytes(){return e.from(this.buf)}equals(e){return this.buf.equals(e.buf)}version(){return o.decode(this.buf)}variant(){let t=e.from(this.buf);return o.decode(t),t=t.slice(o.decode.bytes),o.decode(t)}toString(e="base32"){switch(this.version()){case c.V1:return u.default.encode(e,this.buf).toString();default:throw new Error("unknown ID version.")}}}t.ThreadID=c,function(e){let t;e.V1=1,function(e){e[e.Raw=85]="Raw",e[e.AccessControlled=112]="AccessControlled"}(t=e.Variant||(e.Variant={}))}(c||(c={})),t.ThreadID=c}).call(this,r(0).Buffer)},84:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.marshalKey=void 0;const i=r(31);o(r(61),t),o(r(183),t),o(r(209),t),o(r(213),t),o(r(217),t);var u=r(218);Object.defineProperty(t,"Block",{enumerable:!0,get:function(){return u.Block}}),t.marshalKey=e=>e.public?i.keys.marshalPrivateKey(e):i.keys.marshalPublicKey(e)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,