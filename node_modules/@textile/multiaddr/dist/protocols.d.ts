export declare type TableRow = [number, number, string, boolean?, (boolean | string)?];
export interface Protocol {
    code: number;
    size: number;
    name: string;
    resolvable: boolean;
    path: boolean;
}
declare function p([code, size, name, resolvable, path]: TableRow): Protocol;
declare function Protocols(proto: number | string): Protocol;
declare namespace Protocols {
    const V = -1;
    const lengthPrefixedVarSize = -1;
    const table: TableRow[];
    const codes: Record<number, Protocol>;
    const names: Record<string, Protocol>;
    const object: typeof p;
}
export { Protocols as protocols };
