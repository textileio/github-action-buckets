/**
 * First-in, first-out (FIFO) buffer (queue) with default item values.
 * Optionally circular based on [[Queue.limit]].
 */
export default class Queue<A> {
    /** The length after which the queue becomes circular, i.e., discards oldest items. */
    private limit;
    private list;
    length: number;
    constructor(
    /** The length after which the queue becomes circular, i.e., discards oldest items. */
    limit?: number);
    /**
     * Add an item to the end of the queue.
     */
    enqueue(value: A): void;
    /**
     * Return the oldest item from the queue.
     */
    dequeue(): A;
    clear(): void;
    forEach(f: (value: A) => void): void;
}
