"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("./common");
/**
 * Convert a simple callback-taking function to an async stream.
 *
 * Example:
 * ```js
 * const animationFrames = wrapRequest(window.requestAnimationFrame);
 * ```
 *
 */
const wrapRequest = (request, onReturn) => {
    const done = false;
    let promise = null;
    let cancel = null;
    let closed = false;
    let result;
    return {
        next() {
            if (closed) {
                return common_1.donePromise;
            }
            if (promise === null) {
                promise = new Promise((resolve, reject) => {
                    result = request((value) => {
                        resolve({ value, done });
                        promise = null;
                    });
                    cancel = reject;
                });
            }
            return promise;
        },
        async return(value) {
            closed = true;
            if (cancel) {
                cancel(new Error('Canceled'));
                cancel = null;
            }
            if (onReturn) {
                onReturn(result);
            }
            return { value: value, done: true };
        },
        [Symbol.asyncIterator]() {
            return this;
        },
    };
};
exports.default = wrapRequest;
//# sourceMappingURL=wrapRequest.js.map