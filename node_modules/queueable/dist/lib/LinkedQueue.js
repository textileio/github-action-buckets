"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fast_list_1 = __importDefault(require("fast-list"));
/**
 * First-in, first-out (FIFO) buffer (queue) with default item values.
 * Optionally circular based on [[Queue.limit]].
 */
class Queue {
    constructor(
    /** The length after which the queue becomes circular, i.e., discards oldest items. */
    limit = 0) {
        this.limit = limit;
        this.length = 0;
        this.list = new fast_list_1.default();
    }
    /**
     * Add an item to the end of the queue.
     */
    enqueue(value) {
        const { list } = this;
        if (this.limit > 0 && list.length === this.limit) {
            // Discard oldest item
            list.shift();
        }
        this.length += 1;
        list.push(value);
    }
    /**
     * Return the oldest item from the queue.
     */
    dequeue() {
        if (this.length === 0) {
            throw Error('Queue is empty');
        }
        this.length -= 1;
        return this.list.shift();
    }
    clear() {
        this.length = 0;
        this.list.drop();
    }
    forEach(f) {
        this.list.forEach(f);
    }
}
exports.default = Queue;
//# sourceMappingURL=LinkedQueue.js.map